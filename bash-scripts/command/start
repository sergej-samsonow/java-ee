#!/bin/bash
# amt start - start application command

if [ -f $AMT_PID_FILE ]
then
    if kill -0 $(cat $AMT_PID_FILE) > /dev/null 2>&1
    then 
        msg "Application already started stop it first (exit 1)"
        exit 1
    fi
    rm -r $AMT_PID_FILE
fi

if [ -z "$AMT_CMD" ]
then
    msg "AMT_CMD is not set can't continue (exit 1)"
    exit 1
fi

msg "Start application"
nohup $AMT_CMD >> $AMT_LOG_FILE 2>&1 & echo $! > $AMT_PID_FILE
sleep 1

kill -0 $(cat $AMT_PID_FILE) > /dev/null 2>&1
if [ $? -ne 0 ]
then
    msg "Application start fail check application log $AMT_LOG_FILE exit(1)"
    exit 1
fi

if [ ! -z "$AMT_APPLICATION_READY_URL" ] || [ ! -z "$AMT_MAX_SECONDS_WAIT_FOR_START" ]
then
    msg "Wait until application is ready"
    WAIT_UNTIL=$(date --date="$AMT_MAX_SECONDS_WAIT_FOR_START seconds"  +'%s')
    WAIT=$(date  +'%s')
    WAIT_SECONDS=$((WAIT_UNTIL - WAIT)) 
    PRINT_MSG_TIMER=$WAIT_SECONDS
    msg "Application has $PRINT_MSG_TIMER to start"
    wget -q -t 1 --tries=1 --spider $AMT_APPLICATION_READY_URL
    while [ $? -ne 0 ] && [ $WAIT -lt $WAIT_UNTIL ]
    do
        WAIT=$(date  +'%s')
        WAIT_SECONDS=$((WAIT_UNTIL - WAIT)) 
        if [ $((PRINT_MSG_TIMER - WAIT_SECONDS)) -gt 3 ]
        then
            PRINT_MSG_TIMER=$WAIT_SECONDS
            msg "Wait another $WAIT_SECONDS seconds"
        fi
        wget -q -t 1 --tries=1 --spider $AMT_APPLICATION_READY_URL
    done

    wget -q -t 1 --tries=1 --spider $AMT_APPLICATION_READY_URL
    if [ $? -ne 0 ]
    then
        msg "Application not started yet check application log: $AMT_LOG_FILE exit(1)"
        exit 1
    fi
fi
msg "Application started"
exit 0
